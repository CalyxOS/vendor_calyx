{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0c9bb18b_cfc91621",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-30T09:36:02Z",
      "side": 1,
      "message": "The part that\u0027s not handled by the python script and needs to be sorted out is how do we handle check in.\n\nThe prebuilts repository is only updated right before we make a build, to avoid increasing the repo size and also to always have a known-good / tested version in there (far easier to test once a month then on every single app update)",
      "revId": "2be89e24b227d3c572914169227d161da4029087",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5a388b7_bedcf70e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-12-01T10:34:48Z",
      "side": 1,
      "message": "I think the committing can be easily automated once the prebuilts/calyx/fdroid Makefiles are properly quoted and can handle any file name.  Then fdroid-repo-setupwizard can just rsync the whole state, generate the Makefiles, and commit everything.  That does mean that the .gitignore needs to be maintained, but I don\u0027t think that\u0027s much work.",
      "parentUuid": "0c9bb18b_cfc91621",
      "revId": "2be89e24b227d3c572914169227d161da4029087",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "756b2ae1_17ed76c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-01T10:46:18Z",
      "side": 1,
      "message": "The thing is this won\u0027t be committed every single time there\u0027s a repo update.\n\nThis should only be committed when we want it to be, so it\u0027d have to be some form of a manual trigger.\n\nHowever with the old repo what I had it do was still create the repo every night - that way if there a breakage in repo creation / apk download we know that early.\n\nOld setup:\n* GitLab CI creates repo nightly, stores output as artifact zip\n* Above script downloads said zip and creates makefiles when needed, manually triggered.\n\nNew setup:\n* Server creates repo, and also makefiles along with it. Nightly?\n* Somehow it has to be committed to git manually / only when we want.",
      "parentUuid": "e5a388b7_bedcf70e",
      "revId": "2be89e24b227d3c572914169227d161da4029087",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ad7989c_37bc1b26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-12-01T14:20:28Z",
      "side": 1,
      "message": "I think the commit process could be scheduled to do this:\n* force reset prebuilts/calyx/fdroid to the origin remote\n* run the fdroid-repo-setupwizard/update process\n* commit all the changes\n\nThen when you\u0027re ready to use it, you pull or push that existing commit.",
      "parentUuid": "756b2ae1_17ed76c1",
      "revId": "2be89e24b227d3c572914169227d161da4029087",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35ab98dc_8cc6f954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-01T15:24:25Z",
      "side": 1,
      "message": "That could work.",
      "parentUuid": "9ad7989c_37bc1b26",
      "revId": "2be89e24b227d3c572914169227d161da4029087",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9af6d76_3e0cc255",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-12-02T15:45:58Z",
      "side": 1,
      "message": "https://review.calyxos.org/c/CalyxOS/fdroid-repo-setupwizard/+/6949",
      "parentUuid": "35ab98dc_8cc6f954",
      "revId": "2be89e24b227d3c572914169227d161da4029087",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Builds",
        "description": {
          "value": "Make sure it builds. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Builds\u003dMAX AND -label:Builds\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Builds\u003d0 AND (label:Works\u003dMAX OR label:Bypass-Verification\u003dMAX)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=MAX AND -label:Builds=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Builds=MAX","label:Builds=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=0 AND (label:Works=MAX OR label:Bypass-Verification=MAX)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Builds=0"],"failingAtoms":["label:Works=MAX","label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "2be89e24b227d3c572914169227d161da4029087",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MIN"],"failingAtoms":["label:Code-Review=MAX"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2be89e24b227d3c572914169227d161da4029087",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Works",
        "description": {
          "value": "Make sure it works. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Works\u003dMAX AND -label:Works\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Works\u003d0 AND label:Bypass-Verification\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=MAX AND -label:Works=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Works=MAX","label:Works=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=0 AND label:Bypass-Verification=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Works=0"],"failingAtoms":["label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "2be89e24b227d3c572914169227d161da4029087",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}